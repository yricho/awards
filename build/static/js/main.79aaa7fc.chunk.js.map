{"version":3,"sources":["Api/Api.js","Components/common/Button.js","Components/common/Card.js","Components/CategoryItems.js","Components/common/Modal.js","Components/common/index.js","Components/Layout.js","App.js","reportWebVitals.js","index.js"],"names":["api","getBallotData","fetch","then","res","json","Button","className","children","onClick","CardList","item","title","photoUrL","categoryName","src","alt","CardItem","selected","style","left","transform","CategoryItems","callBack","id","items","useState","selectItem","setSelectItem","map","index","Card","categoryId","JSON","parse","localStorage","getItem","newItems","filter","push","setItem","stringify","storage","handleSelectItem","Modal","props","isShow","onClose","maxWidth","Nav","Footer","Date","getFullYear","Layout","App","data","setData","error","setError","showModal","setShowModal","storageData","setStorageData","useEffect","handleFetch","a","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.79aaa7fc.chunk.js","sourcesContent":["const api = {\n  getBallotData() {\n    return fetch('/api/getBallotData').then(res => {\n      return res.json();\n    });\n  }\n};\n\nexport default api;","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Button = ({\n    className = '',\n    children,\n    onClick\n}) => {\n    return (\n        <button\n            className={`button ${className}`}\n            onClick={onClick}\n        >\n            {children}\n        </button>\n    )\n}\n\nButton.propTypes = {\n    className: PropTypes.string,\n    children: PropTypes.any,\n    onClick: PropTypes.func\n}\n\nexport default Button;","import React from 'react';\nimport PropTypes from \"prop-types\";\nimport Button from './Button';\n\nconst CardItem = ({ item, selected, onClick }) => {\n  const { title, photoUrL } = item;\n  return (\n    <div className={`${selected && 'bg-green-persia border-2 border-gray-400'} hover:text-silver hover:bg-keppel relative border shadow rounded-lg h-full`}>\n      <h3 className={`title ${selected ? 'font-normal' : 'font-light'} mx-8 my-2 text-center text-lg`}>\n        {title}\n      </h3>\n      <img\n        className='image mb-16 mx-auto bg-gray-500 rounded-md shadow rounded-full w-32 h-32 object-cover object-center'\n        src={photoUrL}\n        alt={title} />\n      <div className='absolute bottom-2' style={{ left: '50%', transform: 'translateX(-50%)' }}>\n        <Button\n          className='border rounded px-4 py-2 text-white text-md font-medium'\n          onClick={() => onClick(item)}>\n          Select Nominee\n        </Button>\n      </div>\n    </div>\n  )\n}\n\nexport const CardList = ({ item }) => {\n  const { title, photoUrL, categoryName } = item;\n  return (\n    <div className='flex gap-2'>\n      <img\n        className='image w-16 h-16 rounded object-cover object-center'\n        src={photoUrL}\n        alt={title} />\n      <div className='self-center w-full'>\n        <div className='title font-medium'>\n          {title}\n        </div>\n        <div className='category-name text-sm font-light'>\n          {categoryName}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nCardItem.propTypes = {\n  item: PropTypes.shape({\n    title: PropTypes.string,\n    photoUrL: PropTypes.string\n  }),\n  selected: PropTypes.bool,\n  onClick: PropTypes.func\n}\n\nCardList.propTypes = {\n  item: PropTypes.shape({\n    title: PropTypes.string,\n    photoUrL: PropTypes.string,\n    categoryName: PropTypes.string\n  }),\n}\n\nexport default CardItem;","import React from \"react\";\nimport { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport CardItem from \"./common/Card\";\n\nconst CategoryItems = ({ item, callBack }) => {\n    const { id, items, title } = item;\n    const [selectItem, setSelectItem] = useState({});\n\n    const handleSelectItem = (item) => {\n        const selectItem = {\n            ...item,\n            categoryId: id,\n            categoryName: title\n        }\n        const dataStorage = JSON.parse(localStorage.getItem(\"selected\"));\n        if (!dataStorage) {\n            let storage = [];\n            storage.push(selectItem);\n            callBack(storage);\n            localStorage.setItem(\"selected\", JSON.stringify(storage));\n        } else {\n            let storage = JSON.parse(localStorage.getItem(\"selected\"));\n            let newItems = storage.filter(item => item.categoryId !== selectItem.categoryId);\n            newItems.push(selectItem);\n            callBack(newItems);\n            localStorage.setItem(\"selected\", JSON.stringify(newItems));\n        }\n        setSelectItem(selectItem);\n    }\n\n    return (\n        <div className=\"my-8\">\n            <h2 className=\"title-category text-2xl font-medium p-2 bg-gray-200\">\n                {title}\n            </h2>\n            <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-4\">\n                {\n                    items.map((item, index) =>\n                        <div key={index} className={`item-${index}`}>\n                            <CardItem\n                                selected={item.id === selectItem.id}\n                                item={item}\n                                onClick={item => handleSelectItem(item)} />\n                        </div>\n                    )\n                }\n            </div>\n        </div>\n    )\n}\n\nCategoryItems.propTypes = {\n    item: PropTypes.shape({\n        id: PropTypes.string,\n        items: PropTypes.array,\n        title: PropTypes.string\n    }),\n    callBack: PropTypes.func\n}\n\nexport default CategoryItems;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Button from \"./Button\";\n\nconst Modal = (props) => {\n    const { isShow, title, onClose, children } = props;\n\n    if (isShow) {\n        return (\n            <div className=\"fixed flex items-center text-elephant justify-center top-0 bg-elephant inset-x-0 h-screen bg-opacity-75 z-20\">\n                <div className=\"bg-white p-4 rounded-md\" style={{ maxWidth: 400 }}>\n                    <div className=\"flex justify-between pb-4\">\n                        <span className=\"title text-lg font-medium\">\n                            {title}\n                        </span>\n                        {\n                            onClose && (\n                                <Button\n                                    onClick={onClose}\n                                    className=\"hover:text-gray-500 text-2xl\">\n                                    &#10005;\n                                </Button>\n                            )\n                        }\n                    </div>\n                    <div className=\"content max-h-64 overflow-x-auto\">\n                        {children}\n                    </div>\n                </div>\n            </div>\n        )\n    }\n    return null;\n}\n\nModal.propTypes = {\n    isShow: PropTypes.bool,\n    title: PropTypes.string,\n    onClose: PropTypes.func,\n    children: PropTypes.node\n}\n\nexport default Modal;","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport const Nav = ({ children }) => {\n    return (\n        <div className=\"nav sticky top-0 z-10\">\n            {children}\n        </div>\n    )\n}\n\nexport const Footer = () => {\n    return (\n        <footer>\n            <div className=\"footer py-16 text-center text-gray-500 font-light border-t\">\n                &copy; Awards {new Date().getFullYear()}\n            </div>\n        </footer>\n    )\n}\n\nNav.propTypes = {\n    children: PropTypes.node\n}\n","import React from \"react\";\nimport { Footer, Nav } from \"./common\";\n\nconst Layout = ({ children }) => {\n    return (\n        <div className=\"bg-elephant\">\n            <Nav>\n                <h1 className='uppercase text-center text-4xl bg-elephant shadow py-4'>\n                    Awards {new Date().getFullYear()}\n                </h1>\n            </Nav>\n            <main className=\"main-content max-w-screen-lg mx-4 lg:mx-auto\">\n                {children}\n            </main>\n            <Footer />\n        </div>\n    )\n}\n\nexport default Layout;","import React from 'react';\nimport { useEffect, useState } from 'react';\nimport api from './Api/Api';\nimport { CardList } from './Components/common/Card';\nimport CategoryItems from './Components/CategoryItems';\nimport Button from './Components/common/Button';\nimport Modal from './Components/common/Modal';\nimport Layout from './Components/Layout';\n\nfunction App() {\n\n  const [data, setData] = useState(null);\n  const [error, setError] = useState(null);\n  const [showModal, setShowModal] = useState(false);\n  const [storageData, setStorageData] = useState(null);\n\n  useEffect(() => { handleFetch(); }, [])\n\n  const handleFetch = async () => {\n    try {\n      await api.getBallotData()\n        .then(res => setData(res.items))\n    } catch (error) {\n      setError(error);\n    }\n  }\n\n  const handleShowModal = () => {\n    if (storageData?.length === data?.length) {\n      setShowModal(true);\n    }\n  }\n\n  return (\n    <Layout>\n\n      {!error ?\n        <>\n\n          {/* list of categories */}\n          <div className='my-8'>\n            {\n              data?.map((item, index) =>\n                <div key={index}>\n                  <CategoryItems item={item} callBack={storage => setStorageData(storage)} />\n                </div>\n              )\n            }\n          </div>\n\n          {/* submit button */}\n          <div className='text-center sticky bottom-0 py-8'>\n            <Button\n              className={`${storageData?.length === data?.length ? 'bg-green-persia hover:bg-keppel' : 'bg-silver'} py-4 px-16 rounded-lg border-2 text-white text-xl lg:text-2xl font-black uppercase`}\n              onClick={handleShowModal}\n            >\n              Submit\n            </Button>\n          </div>\n\n          {/* show modal */}\n          <Modal\n            isShow={showModal}\n            title=\"Selected Nominee\"\n            onClose={() => setShowModal(false)}\n          >\n            <div className='divide-y'>\n              {\n                storageData?.map((item, index) =>\n                  <div key={index} className='py-4'>\n                    <CardList item={item} />\n                  </div>\n                )\n              }\n            </div>\n          </Modal>\n\n        </>\n        :\n        <div className='my-16 p-4 border'>Data Not Found</div>\n      }\n    </Layout>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}