{"ast":null,"code":"var _jsxFileName = \"/home/gokampus/dev/fita/react-tht/src/Components/common/Modal.js\";\nimport PropTypes from \"prop-types\";\nimport Button from \"./Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Modal = props => {\n  const {\n    isShow,\n    title,\n    onClose,\n    children\n  } = props;\n\n  if (isShow) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed flex items-center text-elephant justify-center top-0 bg-elephant inset-x-0 h-screen bg-opacity-75 z-20\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-4 rounded-md\",\n        style: {\n          maxWidth: 400\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-between pb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-lg font-medium\",\n            children: title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 12,\n            columnNumber: 25\n          }, this), onClose && /*#__PURE__*/_jsxDEV(Button, {\n            onClick: onClose,\n            className: \"hover:text-gray-500 text-2xl\",\n            children: \"\\u2715\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"max-h-64 overflow-x-auto\",\n          children: children\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this);\n  }\n\n  return null;\n};\n\n_c = Modal;\nModal.propTypes = {\n  isShow: PropTypes.bool,\n  title: PropTypes.string,\n  onClose: PropTypes.func,\n  children: PropTypes.node\n};\nexport default Modal;\n\nvar _c;\n\n$RefreshReg$(_c, \"Modal\");","map":{"version":3,"sources":["/home/gokampus/dev/fita/react-tht/src/Components/common/Modal.js"],"names":["PropTypes","Button","Modal","props","isShow","title","onClose","children","maxWidth","propTypes","bool","string","func","node"],"mappings":";AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,UAAnB;;;AAEA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AACrB,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,KAAV;AAAiBC,IAAAA,OAAjB;AAA0BC,IAAAA;AAA1B,MAAuCJ,KAA7C;;AAEA,MAAIC,MAAJ,EAAY;AACR,wBACI;AAAK,MAAA,SAAS,EAAC,8GAAf;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,yBAAf;AAAyC,QAAA,KAAK,EAAE;AAAEI,UAAAA,QAAQ,EAAE;AAAZ,SAAhD;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,2BAAf;AAAA,kCACI;AAAM,YAAA,SAAS,EAAC,qBAAhB;AAAA,sBACKH;AADL;AAAA;AAAA;AAAA;AAAA,kBADJ,EAKQC,OAAO,iBACH,QAAC,MAAD;AACI,YAAA,OAAO,EAAEA,OADb;AAEI,YAAA,SAAS,EAAC,8BAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBANZ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAeI;AAAK,UAAA,SAAS,EAAC,0BAAf;AAAA,oBACKC;AADL;AAAA;AAAA;AAAA;AAAA,gBAfJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAuBH;;AACD,SAAO,IAAP;AACH,CA7BD;;KAAML,K;AA+BNA,KAAK,CAACO,SAAN,GAAkB;AACdL,EAAAA,MAAM,EAAEJ,SAAS,CAACU,IADJ;AAEdL,EAAAA,KAAK,EAAEL,SAAS,CAACW,MAFH;AAGdL,EAAAA,OAAO,EAAEN,SAAS,CAACY,IAHL;AAIdL,EAAAA,QAAQ,EAAEP,SAAS,CAACa;AAJN,CAAlB;AAOA,eAAeX,KAAf","sourcesContent":["import PropTypes from \"prop-types\";\nimport Button from \"./Button\";\n\nconst Modal = (props) => {\n    const { isShow, title, onClose, children } = props;\n\n    if (isShow) {\n        return (\n            <div className=\"fixed flex items-center text-elephant justify-center top-0 bg-elephant inset-x-0 h-screen bg-opacity-75 z-20\">\n                <div className=\"bg-white p-4 rounded-md\" style={{ maxWidth: 400 }}>\n                    <div className=\"flex justify-between pb-4\">\n                        <span className=\"text-lg font-medium\">\n                            {title}\n                        </span>\n                        {\n                            onClose && (\n                                <Button\n                                    onClick={onClose}\n                                    className=\"hover:text-gray-500 text-2xl\">\n                                    &#10005;\n                                </Button>\n                            )\n                        }\n                    </div>\n                    <div className=\"max-h-64 overflow-x-auto\">\n                        {children}\n                    </div>\n                </div>\n            </div>\n        )\n    }\n    return null;\n}\n\nModal.propTypes = {\n    isShow: PropTypes.bool,\n    title: PropTypes.string,\n    onClose: PropTypes.func,\n    children: PropTypes.node\n}\n\nexport default Modal;"]},"metadata":{},"sourceType":"module"}